using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.RegularExpressions;
using TagPortal.Core;
using TagPortal.Core.Request.User;
using TagPortal.Core.Service;
using TagPortal.DataMigrator.Repository;
using TagPortal.Domain.Enum;
using TagPortal.Domain.Model.PurchaseOrder;
using TagPortal.Domain.Model.Supplier;

namespace TagPortal.DataMigrator.Service
{
    public class PurchaseOrderService
    {
        private readonly string OldTagItConnectionString = "Data Source=192.168.17.10;Initial Catalog=TAGNO;Persist Security Info=True;User ID=wiseadmin;Password=!MRENI2Zb2y1";
        private readonly string NewTagPortalConnectionString = "Data Source=WISE-S07;Initial Catalog=TAG_PORTAL;Persist Security Info=True;User ID=TagPortal;Password=G.}02H6d!Qe5";
        private readonly ServiceContext Services = TagAppContext.Current.Services;

        private readonly Dictionary<long, string> TagItProfitCenterIdTagPortalSiteExternalId = new Dictionary<long, string>() {
            { 1, "1" },
            { 2, "2" },
            { 3, "3" },
            { 4, "4" },
            { 7, "7" },
            { 10, "VN" },
            { 12, "SG" },
            { 5, "5" },
            { 11000, "BRA" },
            { 11100, "TUL" },
            { 6, "6" }
        };

        public void MigratePurchaseOrders(long clientId)
        {
            //Configuration.Configure(NewTagPortalConnectionString);
            //PurchaseOrderRepo purchaseOrderRepo = new PurchaseOrderRepo(OldTagItConnectionString);
            //bool keepGoing = true;
            //int currentPage = 0;
            //DateTime fromDate = DateTime.Now.AddYears(-2);
            //try
            //{
            //    do
            //    {
            //        var poList = purchaseOrderRepo.GetPurchaseOrders(currentPage, 1000, clientId, fromDate);
            //        if (poList == null || poList.Count < 1)
            //        {
            //            keepGoing = false;
            //            continue;
            //        }

            //        foreach (var po in poList)
            //        {
            //            var existingPurchaseOrder = Services.PurchaseOrderService.GetList(new Core.Request.PurchaseOrder.PurchaseOrderRequest() { ClientId = clientId, OrderNo = po.OrderNoFromIFS }, false);
            //            if (existingPurchaseOrder.Any())
            //                continue;

            //            var tagItProfitCenterId = po.Profit_center_id;
            //            var siteExternalId = TagItProfitCenterIdTagPortalSiteExternalId[tagItProfitCenterId];
            //            var site = Services.SiteService.GetList(new Core.Request.Site.SiteRequest() { ClientId = clientId, ExternalId = siteExternalId }).FirstOrDefault();
            //            if (site == null || site.SiteId < 1)
            //                continue;

            //            //USER
            //            if (string.IsNullOrWhiteSpace(po.BuyerInitials))
            //                po.BuyerInitials = "N/A";
            //            var users = Services.UserService.GetList(new UserRequest() { ClientId = clientId, UserType = EnumUserType.ClientUser, UserInitials = po.BuyerInitials });
            //            var user = users.Where(x => x.UserInitials == po.BuyerInitials).FirstOrDefault();
            //            if (user == null || user.UserId < 1)
            //            {
            //                var tempPassword = Services.SecurityService.GenerateTemporaryPassword();
            //                var userId = Services.UserService.Insert(
            //                    EnumSystemType.TagIt,
            //                    po.BuyerInitials,
            //                    po.BuyerInitials,
            //                    EnumUserType.ClientUser,
            //                    po.BuyerInitials + "_autogenerated@tm.tagit.no",
            //                    po.BuyerInitials,
            //                    po.BuyerInitials,
            //                    tempPassword,
            //                    Services.SecurityService.CreatePasswordHash(tempPassword),
            //                    clientId: clientId,
            //                    siteId: site.SiteId);
            //                user = Services.UserService.GetById(userId);
            //            }

            //            //PAYMENT TERM
            //            var paymentTerm = Services.PaymentTermService.GetList(new Core.Request.PaymentTerm.PaymentTermRequest() { ClientId = clientId, Name = po.PaymentTermsText }).FirstOrDefault();
            //            if (paymentTerm == null || paymentTerm.PaymentTermId < 1)
            //            {
            //                var paymentTermId = Services.PaymentTermService.Insert(po.PaymentTermsText, po.PaymentTermsText, string.Empty, clientId, true);
            //                paymentTerm = Services.PaymentTermService.GetById(paymentTermId);
            //            }

            //            //CURRENCY
            //            var currency = Services.CurrencyService.GetList(new Core.Request.Currency.CurrencyRequest() { CurrencyCode = po.Currency }).SingleOrDefault();
            //            if (currency == null || currency.CurrencyId < 1)
            //            {
            //                var currencyId = Services.CurrencyService.Insert(po.Currency, po.Currency);
            //                currency = Services.CurrencyService.GetById(currencyId);
            //            }

            //            ////PROJECT
            //            //var project = Services.ProjectService.GetList(new Core.Request.Project.ProjectRequest() { ClientId = clientId, ProjectNo = po.Project }).FirstOrDefault(x => x.ProjectNo == po.Project);
            //            //if (project == null || project.ProjectId < 1)
            //            //{
            //            //    long buildId = 0;
            //            //    var build = Services.BuildService.GetList(new Core.Request.Build.BuildRequest() { ClientId = clientId, BuildNo = "N/A" }).FirstOrDefault();
            //            //    if (build == null || build.BuildId < 1)
            //            //    {
            //            //        buildId = Services.BuildService.Insert("N/A", "Not Appointed", clientId);
            //            //    }
            //            //    else
            //            //    {
            //            //        buildId = build.BuildId;
            //            //    }
            //            //    var projectId = Services.ProjectService.Insert(po.Project, po.Project_name, buildId, clientId, po.Project_active, site.SiteId);
            //            //    project = Services.ProjectService.GetById(projectId);
            //            //}

            //            ////SFI
            //            //var sfi = Services.SfiService.GetList(new Core.Request.SFI.SfiRequest() { ClientId = clientId, SfiCode = po.Sfi }).FirstOrDefault(x => x.SfiCode == po.Sfi);
            //            //if (sfi == null || sfi.SfiId < 1)
            //            //{
            //            //    var sfiId = Services.SfiService.Insert(po.Sfi, po.Sfi_name, clientId, 0, true);
            //            //    sfi = Services.SfiService.GetById(sfiId);
            //            //}

            //            //ACCOUNT
            //            //var account = Services.LedgerAccountService.GetList(new Core.Request.LedgerAccount.LedgerAccountRequest() { ClientId = clientId, LedgerAccountNo = po.Account }).FirstOrDefault(x => x.LedgerAccountNo == po.Account);

            //            ////SUPPLIER
            //            SupplierModel supplier = null;
            //            if (!string.IsNullOrWhiteSpace(po.Supplier_orgno))
            //            {
            //                supplier = Services.SupplierService.GetList(new Core.Request.Supplier.SupplierRequest() { OrganizationNo = po.Supplier_orgno }).FirstOrDefault(x => x.OrganizationNo == po.Supplier_orgno);
            //                if (supplier == null || supplier.SupplierId < 1)
            //                {
            //                    var supplierOrgNo = Regex.Replace(po.Supplier_orgno, "[^0-9.]", "");
            //                    supplier = Services.SupplierService.GetList(new Core.Request.Supplier.SupplierRequest() { OrganizationNo = supplierOrgNo }).FirstOrDefault(x => x.OrganizationNo == po.Supplier_orgno);
            //                }
            //            }
            //            if (supplier == null || supplier.SupplierId < 1)
            //            {
            //                var supplierId = Services.SupplierService.Insert(
            //                    name: po.Supplier_name,
            //                    organizationNo: po.Supplier_orgno,
            //                    countryId: 999,
            //                    address1: !string.IsNullOrWhiteSpace(po.Supplier_address_1) ? po.Supplier_address_1 : "N/A",
            //                    address2: !string.IsNullOrWhiteSpace(po.Supplier_address_2) ? po.Supplier_address_2 : "N/A",
            //                    zipCode: !string.IsNullOrWhiteSpace(po.Supplier_zipcode) ? po.Supplier_zipcode : "N/A",
            //                    city: po.Supplier_city,
            //                    email: po.Supplier_emal,
            //                    phone: string.Empty);
            //                supplier = Services.SupplierService.GetById(supplierId);
            //            }

            //            //INVOICE ADDRESS
            //            var invoiceAddress = Services.InvoiceAddressService.GetList(new Core.Request.InvoiceAddress.InvoiceAddressRequest() { ClientId = clientId, Name = "Default Address" }).FirstOrDefault();
            //            if (invoiceAddress == null || invoiceAddress.InvoiceAddressId < 1)
            //            {
            //                var invoiceAddressId = Services.InvoiceAddressService.Insert("Default Address", "Default Address", "N/A", "N/A", "N/A", "N/A", "", "", 99, clientId);
            //                invoiceAddress = Services.InvoiceAddressService.GetById(invoiceAddressId);
            //            }

            //            var deliveryTerm = Services.DeliveryTermService.GetList(new Core.Request.DeliveryTerm.DeliveryTermRequest() { ClientId = clientId, DeliveryTermCode = po.Delivery_terms_name }).FirstOrDefault();
            //            if (deliveryTerm == null || deliveryTerm.DeliveryTermId < 1)
            //            {
            //                var deliveryTermId = Services.DeliveryTermService.Insert(po.Delivery_terms_name, po.Delivery_terms_name, string.Empty, clientId);
            //                deliveryTerm = Services.DeliveryTermService.GetById(deliveryTermId);
            //            }

            //            var createdByUser = Services.UserService.GetList(new UserRequest() { ClientId = clientId, UserType = EnumUserType.SystemUser }).FirstOrDefault();

            //            var poLines = purchaseOrderRepo.GetPurchaseLineOrders(po.NextPendingNo);
            //            if (poLines == null || poLines.Count < 1)
            //                continue;
            //            var purchaseOrderLines = new List<PurchaseOrderLineModel>();
            //            foreach (var line in poLines)
            //            {
            //                if (line.Project == "0")
            //                    line.Project = string.Empty;
            //                if (line.Sfi == "0")
            //                    line.Sfi = string.Empty;
            //                if (line.Account == "0")
            //                    line.Account = string.Empty;


            //                if (string.IsNullOrWhiteSpace(line.Unit_name))
            //                    line.Unit_name = "N/A";
            //                // UNIT
            //                var lineUnit = Services.UnitService.GetList(new Core.Request.Unit.UnitRequest() { ClientId = clientId, UnitCode = line.Unit_name }).FirstOrDefault(x => x.UnitCode == line.Unit_name);
            //                if ((lineUnit == null || lineUnit.UnitId < 1) && !string.IsNullOrWhiteSpace(line.Unit_name))
            //                {
            //                    var unitId = Services.UnitService.Insert(line.Unit_name, line.Unit_name, "", clientId);
            //                    lineUnit = Services.UnitService.GetById(unitId);
            //                }

            //                // PROJECT
            //                var lineProject = Services.ProjectService.GetList(new Core.Request.Project.ProjectRequest() { ClientId = clientId, ProjectNo = line.Project_no }).FirstOrDefault(x => x.ProjectNo == line.Project_no);
            //                if ((lineProject == null || lineProject.ProjectId < 1) && !string.IsNullOrWhiteSpace(line.Project_no))
            //                {
            //                    long buildId = 0;
            //                    var build = Services.BuildService.GetList(new Core.Request.Build.BuildRequest() { ClientId = clientId, BuildNo = "N/A" }).FirstOrDefault();
            //                    if (build == null || build.BuildId < 1)
            //                    {
            //                        buildId = Services.BuildService.Insert("N/A", "Not Appointed", clientId);
            //                    }
            //                    else
            //                    {
            //                        buildId = build.BuildId;
            //                    }
            //                    var projectId = Services.ProjectService.Insert(line.Project_no, line.Project_name, buildId, clientId, line.Project_active, site.SiteId);
            //                    lineProject = Services.ProjectService.GetById(projectId);
            //                }

            //                // SFI
            //                var lineSfi = Services.SfiService.GetList(new Core.Request.SFI.SfiRequest() { ClientId = clientId, SfiCode = line.Sfi }).FirstOrDefault(x => x.SfiCode == line.Sfi);
            //                if ((lineSfi == null || lineSfi.SfiId < 1) && !string.IsNullOrWhiteSpace(line.Sfi))
            //                {
            //                    var sfiId = Services.SfiService.Insert(line.Sfi, line.Sfi_name, clientId, true);
            //                    lineSfi = Services.SfiService.GetById(sfiId);
            //                }

            //                // ACCOUNT
            //                var lineAccount = Services.LedgerAccountService.GetList(new Core.Request.LedgerAccount.LedgerAccountRequest() { ClientId = clientId, LedgerAccountNo = line.Account }).FirstOrDefault(x => x.LedgerAccountNo == line.Account);

            //                // DESTINATION
            //                var lineDestination = Services.DestinationService.GetList(new Core.Request.Destination.DestinationRequest() { ClientId = clientId, Name = "N/A" }).FirstOrDefault();
            //                if (lineDestination == null || lineDestination.DestinationId < 1)
            //                {
            //                    var destinationId = Services.DestinationService.Insert("N/A", "Not Appointed", "N/A", "N/A", "N/A", "N/A", "", "", 999, clientId);
            //                    lineDestination = Services.DestinationService.GetById(destinationId);
            //                }

            //                var lineActivity = Services.ActivityService.GetList(new Core.Request.Activity.ActivityRequest() { ClientId = clientId, ActivityNo = line.ActivityNo }).FirstOrDefault(x => x.ActivityNo == line.ActivityNo);
            //                if ((lineActivity == null || lineActivity.ActivityId < 1) && !string.IsNullOrWhiteSpace(line.ActivityNo))
            //                {
            //                    if (lineProject != null && lineProject.ProjectId > 0)
            //                    {
            //                        var activityId = Services.ActivityService.Insert(line.ActivityNo, line.ActivityNo, 0, lineProject.ProjectId, clientId, true);
            //                        lineActivity = Services.ActivityService.GetById(activityId);
            //                    }
            //                }

            //                if (!string.IsNullOrWhiteSpace(line.Project_no))
            //                {
            //                    lineAccount = null;
            //                    if (string.IsNullOrWhiteSpace(line.Sfi))
            //                        continue;
            //                    if (string.IsNullOrWhiteSpace(line.ActivityNo))
            //                        lineActivity = null;
            //                }
            //                else
            //                {
            //                    if (string.IsNullOrWhiteSpace(line.Account))
            //                        continue;
            //                    lineProject = null;
            //                    lineSfi = null;
            //                    lineActivity = null;
            //                }

            //                //purchaseOrderLines.Add(new PurchaseOrderLineModel()
            //                //{
            //                //    PurchaseOrderLineNo = line.OrderLineNo,
            //                //    ActivityId = lineActivity != null ? lineActivity.ActivityId : 0,
            //                //    ClientId = clientId,
            //                //    DeliveryDeadline = line.PlannedDeliveryDate,
            //                //    DestinationId = lineDestination.DestinationId,
            //                //    DocumentationDeadline = line.ResponseDeadline,
            //                //    LedgerAccountId = lineAccount != null ? lineAccount.LedgerAccountId : 0,
            //                //    ProjectId = lineProject != null ? lineProject.ProjectId : 0,
            //                //    Quantity = (decimal)line.Amount,
            //                //    SfiId = lineSfi != null ? lineSfi.SfiId : 0,
            //                //    TaggingCompleted = line.IsTaggingCompleted,
            //                //    UnitId = lineUnit.UnitId,
            //                //    UnitPrice = line.Price,
            //                //    Description = line.Description
            //                //});
            //            }

            //            if (purchaseOrderLines == null || purchaseOrderLines.Count < 1)
            //                continue;

            //            Services.PurchaseOrderService.Insert(
            //                purchaseOrderType: EnumPurchaseOrderType.TagIt,
            //                title: po.OrderHeaderDescription,
            //                description: po.OrderHeaderDescriptionDetails,
            //                additionalInformation: po.OrderMarkingInstructions,
            //                status: EnumPurchaseOrderStatus.Active,
            //                yourRef: po.YourReferenceText,
            //                quotationNo: po.YourOfferText,
            //                currencyId: currency.CurrencyId,
            //                paymentTermId: paymentTerm.PaymentTermId,
            //                deliveryTermId: deliveryTerm.DeliveryTermId,
            //                invoiceAddressId: invoiceAddress.InvoiceAddressId,
            //                createdByUserId: user != null && user.UserId > 0 ? user.UserId : createdByUser.UserId,
            //                siteId: site.SiteId,
            //                supplierId: supplier.SupplierId,
            //                clientId: clientId,
            //                orderNo: po.OrderNoFromIFS,
            //                purchaseOrderLineList: purchaseOrderLines
            //                );
            //        }
            //        currentPage += 1;
            //    } while (keepGoing);
            //}
            //catch (Exception ex)
            //{
            //    Services.ErrorLogService.Insert(ex);
            //}
        }
    }
}
